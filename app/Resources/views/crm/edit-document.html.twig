{% extends 'layout.html.twig' %}

{% block content %}
    {% set documentIsNotNew = document.id is not null %}
    <h1 class="container-fluid">
        Editer {{ type.titre }} {% if documentIsNotNew %} {{ document.reference }} {% endif %}</h1>
    {{ form_start(form) }}
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3 form-group">
                {{ form_row(form.date) }}
            </div>
            <div class="col-md-3"></div>
            <div class="col-md-6 form-group">
                {{ form_row(form.entite) }}
            </div>
            <div class="col-md-6 form-group">
                {{ form_row(form.objet) }}
            </div>
        </div>
        <div id="lignes" class="row">
            <ul class="lignes" data-index="{{ form.lignes|length }}" data-prototype="{{ form_widget(form.lignes.vars.prototype)|e('html_attr') }}">
                {% for ligne in form.lignes %}
                    <li class="document-line">
                        {{ form_row(ligne) }}
                    </li>
                {% endfor %}
            </ul>
            <div class="totaux">
                <table class="table table-striped table-hover">
                    <tr>
                        <td class="totaux-ht">Total HT</td>
                        <td class="totaux-ht-value">0</td>
                    </tr>
                    <tr>
                        <td class="totaux-ttc">Total TTC</td>
                        <td class="totaux-ttc-value">0</td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 form-group select-container">
                {{ form_row(form.modeDePaiement) }}
            </div>
            <div class="col-md-6 form-group select-container">
                {{ form_row(form.conditionsDeReglements) }}
            </div>
            <div class="col-md-6 form-group">
                {{ form_row(form.dureeDeValidite) }}
            </div>
            <div class="col-md-3 form-group">
                {{ form_row(form.tauxDePenalite) }}
            </div>
            <div class="col-md-3 form-group">
                {{ form_row(form.dateDeLivraison) }}
            </div>
            <div class="col-md-12 form-group">
                {{ form_row(form.commentaire) }}
            </div>
            <div class="col-md-12 form-group">
                {{ form_row(form.submit) }}
            </div>



        </div>
    </div>
    {{ form_end(form) }}

    <div class="modal fade" id="article-modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Catalogue de produits</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="catalogue">

                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block js %}
    <script type="text/javascript" src="{{ asset('js/moment-with-locales.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/bootstrap-datetimepicker.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('trumbowyg/trumbowyg.js') }}"></script>
    <script type="text/javascript">
        $(function () {
            $('.datepicker').datetimepicker({
                locale: 'fr',
                format: 'D MM YYYY'
            });
            $('.select-container').find('select').addClass('form-control');
            $('textarea:not(.widen)').trumbowyg({
                lang: 'fr',
                resetCss: true
            });
            $('.document-line > div > div').addClass('ligne-widget');
            var $collectionHolder;

// setup an "add a tag" link
            var $addLigneButton = $('<button type="button" class="add_ligne_link btn btn-info">Ajouter une nouvelle ligne</button>');
            var $newLinkLi = $('<li></li>').append($addLigneButton);

                // Get the ul that holds the collection of tags
                $collectionHolder = $('ul.lignes');

                // add the "add a tag" anchor and li to the tags ul
                $collectionHolder.append($newLinkLi);

                // count the current form inputs we have (e.g. 2), use that as the new
                // index when inserting a new item (e.g. 2)
                $collectionHolder.data('index', $collectionHolder.find(':input').length);

                $addLigneButton.on('click', function(e) {
                    // add a new tag form (see next code block)
                    addLigneForm($collectionHolder, $newLinkLi);
                });
            $addLigneButton.click();
            $(document).on('change', '.qte, .tva, .pu', function (e) {
                var line = $(e.currentTarget).parents('.document-line');
                updateTtc(line);
            });
            $('.document-line').each(function () {
                updateTtc($(this));
            });
            function updateTtc(line) {
                var qte = parseFloat( line.find('.qte').val()) || 0,
                    tva = parseFloat( line.find('.tva option:selected').text()) || 0,
                    pu = parseFloat( line.find('.pu').val()) || 0,
                    totalElement = line.find('.total-ttc'),
                    total = 0;

                if(qte !== 0 && pu !== 0){
                    var totalHt = pu * qte;
                    line.attr('data-ht', totalHt);
                    total = totalHt + (totalHt * tva / 100);
                }
                totalElement.val(total);
                var lines = line.parent().children('.document-line'),
                    totauxHT = 0,
                    totauxTTC = 0;
                lines.each(function () {
                    var totalHt = parseFloat($(this).attr('data-ht')) || 0;
                    totauxHT += totalHt;
                    var totalTTC = parseFloat( $(this).find('.total-ttc').val()) || 0;
                    totauxTTC += totalTTC;
                });
                $('.totaux-ht-value').text(totauxHT);
                $('.totaux-ttc-value').text(totauxTTC);
            }
            $(document).on('click', '.remove-document-line', function (e) {
                var button = $(e.currentTarget);
                button.parents('.document-line').remove();
            });
        });
        function addLigneForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li  class="document-line"></li>').append(newForm);
            var button = $('<button type="button" title="Supprimer cette ligne" class="btn btn-danger remove-document-line" aria-label="Close"><span aria-hidden="true">&times;</span> </button>');
            $newFormLi.append(button);
            $newFormLi.children('div').addClass('ligne-widget');
            $newLinkLi.before($newFormLi);
        }
        var catalogue = {
            'isInitiated': false,
            'page': 1,
            'q': '',
            'trigger': null,
            'container': $("#catalogue"),
            'load': function () {
                var url = "{{ path('catalogue_modal') }}";
                url += '/' + catalogue.page;
                if(catalogue.q.length){
                    url += '/' + catalogue.q
                }
                $.get(url, function (data) {
                    if(catalogue.page = 1){
                        catalogue.container.html(data);
                    }else{
                        catalogue.append($(data));
                    }
                    catalogue.isInitiated = true;
                    catalogue.page++;
                });
            }
        };
        $(document).on('click', '.choose-article', function () {
            catalogue.load();
            catalogue.trigger = $(this);
        })
    </script>
{% endblock %}

{% block css %}
    <link rel="stylesheet" href="{{ asset('css/bootstrap-datetimepicker.min.css') }}">
    <link rel="stylesheet" href="{{ asset('trumbowyg/ui/trumbowyg.css') }}">
{% endblock %}